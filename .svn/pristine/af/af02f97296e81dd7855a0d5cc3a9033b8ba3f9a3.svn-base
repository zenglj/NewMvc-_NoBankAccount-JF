using System; 
using System.Text;
using System.Data.SqlClient;
using System.Collections.Generic; 
using System.Data;
using SelfhelpOrderMgr.Model; 
using Dapper;
namespace SelfhelpOrderMgr.DAL  
{
	 	//T_CY_TYPE
		public partial class T_CY_TYPEDAL
	{			
		
		/// <summary>
		/// 增加一条数据
		/// </summary>
		public void Add(SelfhelpOrderMgr.Model.T_CY_TYPE model)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("insert into T_CY_TYPE(");			
            strSql.Append("FCode,FName,FDesc,famtmonth,FamtLimit,fcamtlimit,flag,FLimittype,pct,FdayLimitflag,FdaylimitAmt,FBamtMonth,FbamtmonthFlag,FAamtmonthflag,bpct,Fbonusflag,cpct,ftotamtmonthflag,ftotamtmonth,totpct,FPower,FDinnerAFlag,FDinnerBFlag,payaccount");
			strSql.Append(") values (");
            strSql.Append("@FCode,@FName,@FDesc,@famtmonth,@FamtLimit,@fcamtlimit,@flag,@FLimittype,@pct,@FdayLimitflag,@FdaylimitAmt,@FBamtMonth,@FbamtmonthFlag,@FAamtmonthflag,@bpct,@Fbonusflag,@cpct,@ftotamtmonthflag,@ftotamtmonth,@totpct,@FPower,@FDinnerAFlag,@FDinnerBFlag,@payaccount");            
            strSql.Append(") ");            
            		
			SqlParameter[] parameters = {
			            new SqlParameter("@FCode", SqlDbType.VarChar,3) ,            
                        new SqlParameter("@FName", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@FDesc", SqlDbType.VarChar,60) ,            
                        new SqlParameter("@famtmonth", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FamtLimit", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@fcamtlimit", SqlDbType.Decimal,5) ,            
                        new SqlParameter("@flag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FLimittype", SqlDbType.Int,4) ,            
                        new SqlParameter("@pct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FdayLimitflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FdaylimitAmt", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FBamtMonth", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FbamtmonthFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FAamtmonthflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@bpct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@Fbonusflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@cpct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@ftotamtmonthflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@ftotamtmonth", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@totpct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FPower", SqlDbType.VarChar,50) ,            
                        new SqlParameter("@FDinnerAFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FDinnerBFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@payaccount", SqlDbType.Int,4)             
              
            };
			            
            parameters[0].Value = model.FCode;                        
            parameters[1].Value = model.FName;                        
            parameters[2].Value = model.FDesc;                        
            parameters[3].Value = model.famtmonth;                        
            parameters[4].Value = model.FamtLimit;                        
            parameters[5].Value = model.fcamtlimit;                        
            parameters[6].Value = model.flag;                        
            parameters[7].Value = model.FLimittype;                        
            parameters[8].Value = model.pct;                        
            parameters[9].Value = model.FdayLimitflag;                        
            parameters[10].Value = model.FdaylimitAmt;                        
            parameters[11].Value = model.FBamtMonth;                        
            parameters[12].Value = model.FbamtmonthFlag;                        
            parameters[13].Value = model.FAamtmonthflag;                        
            parameters[14].Value = model.bpct;                        
            parameters[15].Value = model.Fbonusflag;                        
            parameters[16].Value = model.cpct;                        
            parameters[17].Value = model.ftotamtmonthflag;                        
            parameters[18].Value = model.ftotamtmonth;                        
            parameters[19].Value = model.totpct;                        
            parameters[20].Value = model.FPower;                        
            parameters[21].Value = model.FDinnerAFlag;                        
            parameters[22].Value = model.FDinnerBFlag;                        
            parameters[23].Value = model.payaccount;                        
			            SqlHelper.ExecuteSql(strSql.ToString(),parameters);
            			
		}
		
		
		/// <summary>
		/// 更新一条数据
		/// </summary>
		public bool Update(SelfhelpOrderMgr.Model.T_CY_TYPE model)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("update T_CY_TYPE set ");
			                        
            strSql.Append(" FCode = @FCode , ");                                    
            strSql.Append(" FName = @FName , ");                                    
            strSql.Append(" FDesc = @FDesc , ");                                    
            strSql.Append(" famtmonth = @famtmonth , ");                                    
            strSql.Append(" FamtLimit = @FamtLimit , ");                                    
            strSql.Append(" fcamtlimit = @fcamtlimit , ");                                    
            strSql.Append(" flag = @flag , ");                                    
            strSql.Append(" FLimittype = @FLimittype , ");                                    
            strSql.Append(" pct = @pct , ");                                    
            strSql.Append(" FdayLimitflag = @FdayLimitflag , ");                                    
            strSql.Append(" FdaylimitAmt = @FdaylimitAmt , ");                                    
            strSql.Append(" FBamtMonth = @FBamtMonth , ");                                    
            strSql.Append(" FbamtmonthFlag = @FbamtmonthFlag , ");                                    
            strSql.Append(" FAamtmonthflag = @FAamtmonthflag , ");                                    
            strSql.Append(" bpct = @bpct , ");                                    
            strSql.Append(" Fbonusflag = @Fbonusflag , ");                                    
            strSql.Append(" cpct = @cpct , ");                                    
            strSql.Append(" ftotamtmonthflag = @ftotamtmonthflag , ");                                    
            strSql.Append(" ftotamtmonth = @ftotamtmonth , ");                                    
            strSql.Append(" totpct = @totpct , ");                                    
            strSql.Append(" FPower = @FPower , ");                                    
            strSql.Append(" FDinnerAFlag = @FDinnerAFlag , ");                                    
            strSql.Append(" FDinnerBFlag = @FDinnerBFlag , ");                                    
            strSql.Append(" payaccount = @payaccount  ");            			
			strSql.Append(" where FCode=@FCode  ");
						
SqlParameter[] parameters = {
			            new SqlParameter("@FCode", SqlDbType.VarChar,3) ,            
                        new SqlParameter("@FName", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@FDesc", SqlDbType.VarChar,60) ,            
                        new SqlParameter("@famtmonth", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FamtLimit", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@fcamtlimit", SqlDbType.Decimal,5) ,            
                        new SqlParameter("@flag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FLimittype", SqlDbType.Int,4) ,            
                        new SqlParameter("@pct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FdayLimitflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FdaylimitAmt", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FBamtMonth", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FbamtmonthFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FAamtmonthflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@bpct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@Fbonusflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@cpct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@ftotamtmonthflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@ftotamtmonth", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@totpct", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@FPower", SqlDbType.VarChar,50) ,            
                        new SqlParameter("@FDinnerAFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@FDinnerBFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@payaccount", SqlDbType.Int,4)             
              
            };
						            
            parameters[0].Value = model.FCode;                        
            parameters[1].Value = model.FName;                        
            parameters[2].Value = model.FDesc;                        
            parameters[3].Value = model.famtmonth;                        
            parameters[4].Value = model.FamtLimit;                        
            parameters[5].Value = model.fcamtlimit;                        
            parameters[6].Value = model.flag;                        
            parameters[7].Value = model.FLimittype;                        
            parameters[8].Value = model.pct;                        
            parameters[9].Value = model.FdayLimitflag;                        
            parameters[10].Value = model.FdaylimitAmt;                        
            parameters[11].Value = model.FBamtMonth;                        
            parameters[12].Value = model.FbamtmonthFlag;                        
            parameters[13].Value = model.FAamtmonthflag;                        
            parameters[14].Value = model.bpct;                        
            parameters[15].Value = model.Fbonusflag;                        
            parameters[16].Value = model.cpct;                        
            parameters[17].Value = model.ftotamtmonthflag;                        
            parameters[18].Value = model.ftotamtmonth;                        
            parameters[19].Value = model.totpct;                        
            parameters[20].Value = model.FPower;                        
            parameters[21].Value = model.FDinnerAFlag;                        
            parameters[22].Value = model.FDinnerBFlag;                        
            parameters[23].Value = model.payaccount;                        
            int rows=SqlHelper.ExecuteSql(strSql.ToString(),parameters);
			if (rows > 0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
		
		/// <summary>
		/// 删除一条数据
		/// </summary>
		public bool Delete(string FCode)
		{
			
			StringBuilder strSql=new StringBuilder();
			strSql.Append("delete from T_CY_TYPE ");
			strSql.Append(" where FCode=@FCode ");
						SqlParameter[] parameters = {
					new SqlParameter("@FCode", SqlDbType.VarChar,3)			};
			parameters[0].Value = FCode;


			int rows=SqlHelper.ExecuteSql(strSql.ToString(),parameters);
			if (rows > 0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
				
		
		/// <summary>
		/// 得到一个对象实体
		/// </summary>
		public SelfhelpOrderMgr.Model.T_CY_TYPE GetModel(string FCode)
		{
			
			StringBuilder strSql=new StringBuilder();
			strSql.Append("select FCode, FName, FDesc, famtmonth, FamtLimit, fcamtlimit, flag, FLimittype, pct, FdayLimitflag, FdaylimitAmt, FBamtMonth, FbamtmonthFlag, FAamtmonthflag, bpct, Fbonusflag, cpct, ftotamtmonthflag, ftotamtmonth, totpct, FPower, FDinnerAFlag, FDinnerBFlag, payaccount  ");			
			strSql.Append("  from T_CY_TYPE ");
			strSql.Append(" where FCode=@FCode ");
						SqlParameter[] parameters = {
					new SqlParameter("@FCode", SqlDbType.VarChar,3)			};
			parameters[0].Value = FCode;

			
			SelfhelpOrderMgr.Model.T_CY_TYPE model=new SelfhelpOrderMgr.Model.T_CY_TYPE();
			DataSet ds=SqlHelper.Query(strSql.ToString(),parameters);
			
			if(ds.Tables[0].Rows.Count>0)
			{
																model.FCode= ds.Tables[0].Rows[0]["FCode"].ToString();
																																model.FName= ds.Tables[0].Rows[0]["FName"].ToString();
																																model.FDesc= ds.Tables[0].Rows[0]["FDesc"].ToString();
																												if(ds.Tables[0].Rows[0]["famtmonth"].ToString()!="")
				{
					model.famtmonth=decimal.Parse(ds.Tables[0].Rows[0]["famtmonth"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FamtLimit"].ToString()!="")
				{
					model.FamtLimit=decimal.Parse(ds.Tables[0].Rows[0]["FamtLimit"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["fcamtlimit"].ToString()!="")
				{
					model.fcamtlimit=decimal.Parse(ds.Tables[0].Rows[0]["fcamtlimit"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["flag"].ToString()!="")
				{
					model.flag=int.Parse(ds.Tables[0].Rows[0]["flag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FLimittype"].ToString()!="")
				{
					model.FLimittype=int.Parse(ds.Tables[0].Rows[0]["FLimittype"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["pct"].ToString()!="")
				{
					model.pct=decimal.Parse(ds.Tables[0].Rows[0]["pct"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FdayLimitflag"].ToString()!="")
				{
					model.FdayLimitflag=int.Parse(ds.Tables[0].Rows[0]["FdayLimitflag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FdaylimitAmt"].ToString()!="")
				{
					model.FdaylimitAmt=decimal.Parse(ds.Tables[0].Rows[0]["FdaylimitAmt"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FBamtMonth"].ToString()!="")
				{
					model.FBamtMonth=decimal.Parse(ds.Tables[0].Rows[0]["FBamtMonth"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FbamtmonthFlag"].ToString()!="")
				{
					model.FbamtmonthFlag=int.Parse(ds.Tables[0].Rows[0]["FbamtmonthFlag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FAamtmonthflag"].ToString()!="")
				{
					model.FAamtmonthflag=int.Parse(ds.Tables[0].Rows[0]["FAamtmonthflag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["bpct"].ToString()!="")
				{
					model.bpct=decimal.Parse(ds.Tables[0].Rows[0]["bpct"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["Fbonusflag"].ToString()!="")
				{
					model.Fbonusflag=int.Parse(ds.Tables[0].Rows[0]["Fbonusflag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["cpct"].ToString()!="")
				{
					model.cpct=decimal.Parse(ds.Tables[0].Rows[0]["cpct"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["ftotamtmonthflag"].ToString()!="")
				{
					model.ftotamtmonthflag=int.Parse(ds.Tables[0].Rows[0]["ftotamtmonthflag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["ftotamtmonth"].ToString()!="")
				{
					model.ftotamtmonth=decimal.Parse(ds.Tables[0].Rows[0]["ftotamtmonth"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["totpct"].ToString()!="")
				{
					model.totpct=decimal.Parse(ds.Tables[0].Rows[0]["totpct"].ToString());
				}
																																				model.FPower= ds.Tables[0].Rows[0]["FPower"].ToString();
																												if(ds.Tables[0].Rows[0]["FDinnerAFlag"].ToString()!="")
				{
					model.FDinnerAFlag=int.Parse(ds.Tables[0].Rows[0]["FDinnerAFlag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["FDinnerBFlag"].ToString()!="")
				{
					model.FDinnerBFlag=int.Parse(ds.Tables[0].Rows[0]["FDinnerBFlag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["payaccount"].ToString()!="")
				{
					model.payaccount=int.Parse(ds.Tables[0].Rows[0]["payaccount"].ToString());
				}
																														
				return model;
			}
			else
			{
				return null;
			}
		}
		
		
		/// <summary>
		/// 获得数据列表
		/// </summary>
		public DataSet GetList(string strWhere)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("select FCode, FName, FDesc, famtmonth, FamtLimit, fcamtlimit, flag, FLimittype, pct, FdayLimitflag, FdaylimitAmt, FBamtMonth, FbamtmonthFlag, FAamtmonthflag, bpct, Fbonusflag, cpct, ftotamtmonthflag, ftotamtmonth, totpct, FPower, FDinnerAFlag, FDinnerBFlag, payaccount  ");
			strSql.Append(" FROM T_CY_TYPE ");
			if(strWhere.Trim()!="")
			{
				strSql.Append(" where "+strWhere);
			}
			return SqlHelper.Query(strSql.ToString());
		}
		
		/// <summary>
		/// 获得前几行数据
		/// </summary>
		public DataSet GetList(int Top,string strWhere,string filedOrder)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("select ");
			if(Top>0)
			{
				strSql.Append(" top "+Top.ToString());
			}
			strSql.Append(" FCode, FName, FDesc, famtmonth, FamtLimit, fcamtlimit, flag, FLimittype, pct, FdayLimitflag, FdaylimitAmt, FBamtMonth, FbamtmonthFlag, FAamtmonthflag, bpct, Fbonusflag, cpct, ftotamtmonthflag, ftotamtmonth, totpct, FPower, FDinnerAFlag, FDinnerBFlag, payaccount  ");
			strSql.Append(" FROM T_CY_TYPE ");
			if(strWhere.Trim()!="")
			{
				strSql.Append(" where "+strWhere);
			}
			strSql.Append(" order by " + filedOrder);
			return SqlHelper.Query(strSql.ToString());
		}

   
	}
}

