using System; 
using System.Text;
using System.Data.SqlClient;
using System.Collections.Generic; 
using System.Data;
using SelfhelpOrderMgr.Model; 
using Dapper;
namespace SelfhelpOrderMgr.DAL  
{
	 	//T_Criminal_card
		public partial class T_Criminal_cardDAL
	{			
		
		/// <summary>
		/// 增加一条数据
		/// </summary>
		public int Add(SelfhelpOrderMgr.Model.T_Criminal_card model)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("insert into T_Criminal_card(");			
            strSql.Append("fcrimecode,cardcodea,AmountA,UnPaidAmtA,cardflaga,cardcodeb,AmountB,cardflagb,UnPaidAmtB,flimitflag,flimitamt,BankAccNo,RegFlag,UseFlag,BankAmount,AmountC,bankdate,BankRegFlag,tmpbankAmount,curbankamount,unregflag");
			strSql.Append(") values (");
            strSql.Append("@fcrimecode,@cardcodea,@AmountA,@UnPaidAmtA,@cardflaga,@cardcodeb,@AmountB,@cardflagb,@UnPaidAmtB,@flimitflag,@flimitamt,@BankAccNo,@RegFlag,@UseFlag,@BankAmount,@AmountC,@bankdate,@BankRegFlag,@tmpbankAmount,@curbankamount,@unregflag");            
            strSql.Append(") ");            
            strSql.Append(";select @@IDENTITY");		
			SqlParameter[] parameters = {
			            new SqlParameter("@fcrimecode", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@cardcodea", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@AmountA", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@UnPaidAmtA", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@cardflaga", SqlDbType.Int,4) ,            
                        new SqlParameter("@cardcodeb", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@AmountB", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@cardflagb", SqlDbType.Int,4) ,            
                        new SqlParameter("@UnPaidAmtB", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@flimitflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@flimitamt", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@BankAccNo", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@RegFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@UseFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@BankAmount", SqlDbType.Money,8) ,            
                        new SqlParameter("@AmountC", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@bankdate", SqlDbType.DateTime) ,            
                        new SqlParameter("@BankRegFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@tmpbankAmount", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@curbankamount", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@unregflag", SqlDbType.Int,4)             
              
            };
			            
            parameters[0].Value = model.fcrimecode;                        
            parameters[1].Value = model.cardcodea;                        
            parameters[2].Value = model.AmountA;                        
            parameters[3].Value = model.UnPaidAmtA;                        
            parameters[4].Value = model.cardflaga;                        
            parameters[5].Value = model.cardcodeb;                        
            parameters[6].Value = model.AmountB;                        
            parameters[7].Value = model.cardflagb;                        
            parameters[8].Value = model.UnPaidAmtB;                        
            parameters[9].Value = model.flimitflag;                        
            parameters[10].Value = model.flimitamt;                        
            parameters[11].Value = model.BankAccNo;                        
            parameters[12].Value = model.RegFlag;                        
            parameters[13].Value = model.UseFlag;                        
            parameters[14].Value = model.BankAmount;                        
            parameters[15].Value = model.AmountC;                        
            parameters[16].Value = model.bankdate;                        
            parameters[17].Value = model.BankRegFlag;                        
            parameters[18].Value = model.tmpbankAmount;                        
            parameters[19].Value = model.curbankamount;                        
            parameters[20].Value = model.unregflag;                        
			   
			object obj = SqlHelper.GetSingle(strSql.ToString(),parameters);			
			if (obj == null)
			{
				return 0;
			}
			else
			{
				                    
            	return Convert.ToInt32(obj);
                                                                  
			}			   
            			
		}
		
		
		/// <summary>
		/// 更新一条数据
		/// </summary>
		public bool Update(SelfhelpOrderMgr.Model.T_Criminal_card model)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("update T_Criminal_card set ");
			                                                
            strSql.Append(" fcrimecode = @fcrimecode , ");                                    
            strSql.Append(" cardcodea = @cardcodea , ");                                    
            strSql.Append(" AmountA = @AmountA , ");                                    
            strSql.Append(" UnPaidAmtA = @UnPaidAmtA , ");                                    
            strSql.Append(" cardflaga = @cardflaga , ");                                    
            strSql.Append(" cardcodeb = @cardcodeb , ");                                    
            strSql.Append(" AmountB = @AmountB , ");                                    
            strSql.Append(" cardflagb = @cardflagb , ");                                    
            strSql.Append(" UnPaidAmtB = @UnPaidAmtB , ");                                    
            strSql.Append(" flimitflag = @flimitflag , ");                                    
            strSql.Append(" flimitamt = @flimitamt , ");                                    
            strSql.Append(" BankAccNo = @BankAccNo , ");                                    
            strSql.Append(" RegFlag = @RegFlag , ");                                    
            strSql.Append(" UseFlag = @UseFlag , ");                                    
            strSql.Append(" BankAmount = @BankAmount , ");                                    
            strSql.Append(" AmountC = @AmountC , ");                                    
            strSql.Append(" bankdate = @bankdate , ");                                    
            strSql.Append(" BankRegFlag = @BankRegFlag , ");                                    
            strSql.Append(" tmpbankAmount = @tmpbankAmount , ");                                    
            strSql.Append(" curbankamount = @curbankamount , ");                                    
            strSql.Append(" unregflag = @unregflag  ");            			
			strSql.Append(" where seqno=@seqno ");
						
SqlParameter[] parameters = {
			            new SqlParameter("@seqno", SqlDbType.Int,4) ,            
                        new SqlParameter("@fcrimecode", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@cardcodea", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@AmountA", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@UnPaidAmtA", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@cardflaga", SqlDbType.Int,4) ,            
                        new SqlParameter("@cardcodeb", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@AmountB", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@cardflagb", SqlDbType.Int,4) ,            
                        new SqlParameter("@UnPaidAmtB", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@flimitflag", SqlDbType.Int,4) ,            
                        new SqlParameter("@flimitamt", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@BankAccNo", SqlDbType.VarChar,20) ,            
                        new SqlParameter("@RegFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@UseFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@BankAmount", SqlDbType.Money,8) ,            
                        new SqlParameter("@AmountC", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@bankdate", SqlDbType.DateTime) ,            
                        new SqlParameter("@BankRegFlag", SqlDbType.Int,4) ,            
                        new SqlParameter("@tmpbankAmount", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@curbankamount", SqlDbType.Decimal,9) ,            
                        new SqlParameter("@unregflag", SqlDbType.Int,4)             
              
            };
						            
            parameters[0].Value = model.seqno;                        
            parameters[1].Value = model.fcrimecode;                        
            parameters[2].Value = model.cardcodea;                        
            parameters[3].Value = model.AmountA;                        
            parameters[4].Value = model.UnPaidAmtA;                        
            parameters[5].Value = model.cardflaga;                        
            parameters[6].Value = model.cardcodeb;                        
            parameters[7].Value = model.AmountB;                        
            parameters[8].Value = model.cardflagb;                        
            parameters[9].Value = model.UnPaidAmtB;                        
            parameters[10].Value = model.flimitflag;                        
            parameters[11].Value = model.flimitamt;                        
            parameters[12].Value = model.BankAccNo;                        
            parameters[13].Value = model.RegFlag;                        
            parameters[14].Value = model.UseFlag;                        
            parameters[15].Value = model.BankAmount;                        
            parameters[16].Value = model.AmountC;                        
            parameters[17].Value = model.bankdate;                        
            parameters[18].Value = model.BankRegFlag;                        
            parameters[19].Value = model.tmpbankAmount;                        
            parameters[20].Value = model.curbankamount;                        
            parameters[21].Value = model.unregflag;                        
            int rows=SqlHelper.ExecuteSql(strSql.ToString(),parameters);
			if (rows > 0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
		
		/// <summary>
		/// 删除一条数据
		/// </summary>
		public bool Delete(int seqno)
		{
			
			StringBuilder strSql=new StringBuilder();
			strSql.Append("delete from T_Criminal_card ");
			strSql.Append(" where seqno=@seqno");
						SqlParameter[] parameters = {
					new SqlParameter("@seqno", SqlDbType.Int,4)
			};
			parameters[0].Value = seqno;


			int rows=SqlHelper.ExecuteSql(strSql.ToString(),parameters);
			if (rows > 0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
				/// <summary>
		/// 批量删除一批数据
		/// </summary>
		public bool DeleteList(string seqnolist )
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("delete from T_Criminal_card ");
			strSql.Append(" where ID in ("+seqnolist + ")  ");
			int rows=SqlHelper.ExecuteSql(strSql.ToString());
			if (rows > 0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
				
		
		/// <summary>
		/// 得到一个对象实体
		/// </summary>
		public SelfhelpOrderMgr.Model.T_Criminal_card GetModel(int seqno)
		{
			
			StringBuilder strSql=new StringBuilder();
			strSql.Append("select seqno, fcrimecode, cardcodea, AmountA, UnPaidAmtA, cardflaga, cardcodeb, AmountB, cardflagb, UnPaidAmtB, flimitflag, flimitamt, BankAccNo, RegFlag, UseFlag, BankAmount, AmountC, bankdate, BankRegFlag, tmpbankAmount, curbankamount, unregflag  ");			
			strSql.Append("  from T_Criminal_card ");
			strSql.Append(" where seqno=@seqno");
						SqlParameter[] parameters = {
					new SqlParameter("@seqno", SqlDbType.Int,4)
			};
			parameters[0].Value = seqno;

			
			SelfhelpOrderMgr.Model.T_Criminal_card model=new SelfhelpOrderMgr.Model.T_Criminal_card();
			DataSet ds=SqlHelper.Query(strSql.ToString(),parameters);
			
			if(ds.Tables[0].Rows.Count>0)
			{
												if(ds.Tables[0].Rows[0]["seqno"].ToString()!="")
				{
					model.seqno=int.Parse(ds.Tables[0].Rows[0]["seqno"].ToString());
				}
																																				model.fcrimecode= ds.Tables[0].Rows[0]["fcrimecode"].ToString();
																																model.cardcodea= ds.Tables[0].Rows[0]["cardcodea"].ToString();
																												if(ds.Tables[0].Rows[0]["AmountA"].ToString()!="")
				{
					model.AmountA=decimal.Parse(ds.Tables[0].Rows[0]["AmountA"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["UnPaidAmtA"].ToString()!="")
				{
					model.UnPaidAmtA=decimal.Parse(ds.Tables[0].Rows[0]["UnPaidAmtA"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["cardflaga"].ToString()!="")
				{
					model.cardflaga=int.Parse(ds.Tables[0].Rows[0]["cardflaga"].ToString());
				}
																																				model.cardcodeb= ds.Tables[0].Rows[0]["cardcodeb"].ToString();
																												if(ds.Tables[0].Rows[0]["AmountB"].ToString()!="")
				{
					model.AmountB=decimal.Parse(ds.Tables[0].Rows[0]["AmountB"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["cardflagb"].ToString()!="")
				{
					model.cardflagb=int.Parse(ds.Tables[0].Rows[0]["cardflagb"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["UnPaidAmtB"].ToString()!="")
				{
					model.UnPaidAmtB=decimal.Parse(ds.Tables[0].Rows[0]["UnPaidAmtB"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["flimitflag"].ToString()!="")
				{
					model.flimitflag=int.Parse(ds.Tables[0].Rows[0]["flimitflag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["flimitamt"].ToString()!="")
				{
					model.flimitamt=decimal.Parse(ds.Tables[0].Rows[0]["flimitamt"].ToString());
				}
																																				model.BankAccNo= ds.Tables[0].Rows[0]["BankAccNo"].ToString();
																												if(ds.Tables[0].Rows[0]["RegFlag"].ToString()!="")
				{
					model.RegFlag=int.Parse(ds.Tables[0].Rows[0]["RegFlag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["UseFlag"].ToString()!="")
				{
					model.UseFlag=int.Parse(ds.Tables[0].Rows[0]["UseFlag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["BankAmount"].ToString()!="")
				{
					model.BankAmount=decimal.Parse(ds.Tables[0].Rows[0]["BankAmount"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["AmountC"].ToString()!="")
				{
					model.AmountC=decimal.Parse(ds.Tables[0].Rows[0]["AmountC"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["bankdate"].ToString()!="")
				{
					model.bankdate=DateTime.Parse(ds.Tables[0].Rows[0]["bankdate"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["BankRegFlag"].ToString()!="")
				{
					model.BankRegFlag=int.Parse(ds.Tables[0].Rows[0]["BankRegFlag"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["tmpbankAmount"].ToString()!="")
				{
					model.tmpbankAmount=decimal.Parse(ds.Tables[0].Rows[0]["tmpbankAmount"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["curbankamount"].ToString()!="")
				{
					model.curbankamount=decimal.Parse(ds.Tables[0].Rows[0]["curbankamount"].ToString());
				}
																																if(ds.Tables[0].Rows[0]["unregflag"].ToString()!="")
				{
					model.unregflag=int.Parse(ds.Tables[0].Rows[0]["unregflag"].ToString());
				}
																														
				return model;
			}
			else
			{
				return null;
			}
		}
		
		
		/// <summary>
		/// 获得数据列表
		/// </summary>
		public DataSet GetList(string strWhere)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("select seqno, fcrimecode, cardcodea, AmountA, UnPaidAmtA, cardflaga, cardcodeb, AmountB, cardflagb, UnPaidAmtB, flimitflag, flimitamt, BankAccNo, RegFlag, UseFlag, BankAmount, AmountC, bankdate, BankRegFlag, tmpbankAmount, curbankamount, unregflag  ");
			strSql.Append(" FROM T_Criminal_card ");
			if(strWhere.Trim()!="")
			{
				strSql.Append(" where "+strWhere);
			}
			return SqlHelper.Query(strSql.ToString());
		}
		
		/// <summary>
		/// 获得前几行数据
		/// </summary>
		public DataSet GetList(int Top,string strWhere,string filedOrder)
		{
			StringBuilder strSql=new StringBuilder();
			strSql.Append("select ");
			if(Top>0)
			{
				strSql.Append(" top "+Top.ToString());
			}
			strSql.Append(" seqno, fcrimecode, cardcodea, AmountA, UnPaidAmtA, cardflaga, cardcodeb, AmountB, cardflagb, UnPaidAmtB, flimitflag, flimitamt, BankAccNo, RegFlag, UseFlag, BankAmount, AmountC, bankdate, BankRegFlag, tmpbankAmount, curbankamount, unregflag  ");
			strSql.Append(" FROM T_Criminal_card ");
			if(strWhere.Trim()!="")
			{
				strSql.Append(" where "+strWhere);
			}
			strSql.Append(" order by " + filedOrder);
			return SqlHelper.Query(strSql.ToString());
		}

   
	}
}

