using SelfhelpOrderMgr.BLL;
using SelfhelpOrderMgr.Model;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Mvc;
using System.Web.Script.Serialization;

namespace SelfhelpOrderMgr.Web.Controllers
{
    public class ReportController : BaseController
    {
        //
        // GET: /Report/
        JavaScriptSerializer jss = new JavaScriptSerializer();
        public ActionResult Index(int id=1)
        {
            List<T_AREA> areas = new T_AREABLL().GetModelList("FCode in( select fareaCode from t_czy_area where fflag=2 and fcode='" + Session["loginUserCode"].ToString() + "')");
            ViewData["areas"] = areas;

            List<T_CY_TYPE> cys = new T_CY_TYPEBLL().GetModelList("");
            ViewData["cys"] = cys;

            
            DataTable dt = new CommTableInfoBLL().GetDataTable("select distinct CrtBy from t_Vcrd Order by CrtBy");
            List<string> crtbys = new List<string>();
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow row in dt.Rows)
                {
                    crtbys.Add(row[0].ToString());
                }
            }
            ViewData["crtbys"] = crtbys;

            dt = new CommTableInfoBLL().GetDataTable("select distinct Dtype from t_Vcrd where damount<>0 Order by Dtype");
            List<string> cashtypes = new List<string>();//存款类型
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow row in dt.Rows)
                {
                    cashtypes.Add(row[0].ToString());
                }
            }
            ViewData["cashtypes"] = cashtypes;

            dt = new CommTableInfoBLL().GetDataTable("select distinct Dtype from t_Vcrd where camount<>0 Order by Dtype");
            List<string> paytypes = new List<string>();//存款类型
            if (dt.Rows.Count > 0)
            {
                foreach (DataRow row in dt.Rows)
                {
                    paytypes.Add(row[0].ToString());
                }
            }
            ViewData["paytypes"] = paytypes;
            ViewData["id"] = id;
            ViewData["SaveType"] = new T_SavetypeBLL().GetModelList("typeflag='1'");

            return View();
        }

        //获取消费明细记录
        public ActionResult getInvList()
        {
            string invNo = Request["invNo"];
            if(string.IsNullOrEmpty(invNo))
            {
                return Content("Err|传入的消费单号不能为空");
            }
            T_Invoice invoice = new T_InvoiceBLL().GetModel(invNo);
            if (invoice!=null)
            {
                return Content("OK|"+ jss.Serialize(invoice));
            }
            else
            {
                return Content("Err|查找不到相应的记录");
            }
            
        }

        //获取消费类型并可判断该类型ID是否存在
        public ActionResult GetSaleType()
        {
            string saleId = Request["saleId"];
            if (string.IsNullOrEmpty(saleId))
            {
                return Content("Err|消费类型不能为空");
            }
            T_SHO_SaleType saletype = new T_SHO_SaleTypeBLL().GetModelList("TypeFlagId="+saleId)[0];
            if (saletype != null)
            {
                return Content("OK|" + jss.Serialize(saletype));
            }
            else
            {
                return Content("Err|查找不到相应的消费类型");
            }
            
        }


        public ActionResult SaveChangeType()
        {
            string invNo = Request["invNo"];
            string saveType = Request["saveType"];
            if (string.IsNullOrEmpty(invNo))
            {
                return Content("Err|消费单号不能为空");
            }
            List<T_Savetype> saveTypes = new T_SavetypeBLL().GetModelList("fcode='"+ saveType +"' and typeflag=1");
            if (saveTypes.Count <= 0)
            {
                return Content("Err|您所选的调账类型不正确");
            }

            T_Invoice invoice = new T_InvoiceBLL().GetModel(invNo);
            
            if (invoice != null)
            {
                if (new T_VcrdBLL().ChangeVcrdListType(invNo, saveTypes[0].fname, saveTypes[0].fcode))
                {
                    return Content("OK|保存修改成功");
                }
                else
                {
                    return Content("Err|保存修改失败");
                }
            }
            else
            {
                return Content("Err|查找不到相应的记录");
            }
            
        }
        public ActionResult GetSearchVcrds()
        {

            string strWhere = SetRequestSearchWhere(Session["loginUserCode"].ToString());

            //分页信息
            string action = Request["action"];
            string strPage = Request["page"];
            string strRow = Request["rows"];
            int page = 1;
            int row = 10;
            decimal listRows = 0;
            string sss = "";
            if (string.IsNullOrEmpty(strPage) == false)
            {
                page = Convert.ToInt32(strPage);
            }

            if (string.IsNullOrEmpty(strRow) == false)
            {
                row = Convert.ToInt32(strRow);
            }
            
            listRows = new T_VcrdBLL().GetListCount(strWhere.ToString())[0];

            List<T_Vcrd> vcrds = new T_VcrdBLL().GetPageList(page, row, strWhere, "CrtDate,FCrimeCode");

            sss = "{\"total\":" + listRows.ToString() + ",\"rows\":" + jss.Serialize(vcrds) + "}";
            return Content(sss);
        }

        //将Request参数传入GetSearchWhere函数，并生成查询条件
        private string SetRequestSearchWhere(string LoginCode)
        {
            string startTime = Request["startTime"];
            string endTime = Request["endTime"];
            string areaName = Request["areaName"];
            string FName = Request["FName"];
            string FCode = Request["FCode"];
            string cyName = Request["cyName"];
            string CrtBy = Request["CrtBy"];
            string CriminalFlag = Request["CriminalFlag"];//是否在押
            string CashTypes = Request["CashTypes"];//存款类型
            string PayTypes = Request["PayTypes"];//取款类型
            string AccTypes = Request["AccTypes"];//账户类型
            string BankFlags = Request["BankFlags"];//银行状态类型
            string FRemark = Request["FRemark"];//备注

            string strWhere = GetSearchWhere(LoginCode, ref startTime, ref endTime, areaName, FName, FCode, CrtBy, CriminalFlag, CashTypes, PayTypes, AccTypes, BankFlags, FRemark);
            return strWhere;
        }

        //生成Vcrd查询条件
        private static string GetSearchWhere(string LoginCode, ref string startTime, ref string endTime, string areaName, string FName, string FCode, string CrtBy, string CriminalFlag, string CashTypes, string PayTypes, string AccTypes, string BankFlags, string FRemark)
        {
            string strWhere = "Flag=0 ";
            if (string.IsNullOrEmpty(startTime) == false)
            {
                DateTime sdt = Convert.ToDateTime(startTime);
                startTime = sdt.Year.ToString() + "-" + sdt.Month.ToString() + "-" + sdt.Day.ToString() + " 00:00:00";
            }
            if (string.IsNullOrEmpty(endTime) == false)
            {
                DateTime edt = Convert.ToDateTime(endTime);
                endTime = edt.Year.ToString() + "-" + edt.Month.ToString() + "-" + edt.Day.ToString() + " 23:59:00";
            }

            if (string.IsNullOrEmpty(startTime) == false)
            {
                strWhere = strWhere + " and  CrtDate>='" + startTime + "'";
            }
            if (string.IsNullOrEmpty(startTime) == false)
            {
                strWhere = strWhere + " and  CrtDate<'" + endTime + "'";
            }

            if (string.IsNullOrEmpty(areaName) == false)
            {
                if (areaName != "请选择队别")
                {
                    //strWhere = strWhere + " and FAreaName='" + areaName + "'";
                    strWhere = strWhere + @" and fcrimecode in( select fcode from t_Criminal 
                        where FAreaCode in(select fcode from t_area where fcode='"+ areaName +@"' or fid in(
                        select id from t_area where fcode='" + areaName + "')))";
                }
            }
            if (string.IsNullOrEmpty(FName) == false)
            {
                strWhere = strWhere + " and FCriminal like '%" + FName + "%'";
            }
            if (string.IsNullOrEmpty(FCode) == false)
            {
                strWhere = strWhere + " and FCrimeCode='" + FCode + "'";
            }
            if (string.IsNullOrEmpty(CrtBy) == false)
            {
                strWhere = strWhere + " and CrtBy='" + CrtBy + "'";
            }
            string savePays = "";
            if (string.IsNullOrEmpty(CashTypes) == false)
            {
                savePays = CashTypes;
            }
            if (string.IsNullOrEmpty(PayTypes) == false)
            {
                if (savePays == "")
                {
                    savePays = PayTypes;
                }
                else
                {
                    savePays = savePays + "," + PayTypes;
                }

            }

            if (string.IsNullOrEmpty(savePays) == false)
            {
                strWhere = strWhere + " and Dtype in (" + savePays + ")";
            }

            if (string.IsNullOrEmpty(AccTypes) == false)
            {
                strWhere = strWhere + " and AccType in (" + AccTypes + ")";
            }

            if (string.IsNullOrEmpty(BankFlags) == false)
            {
                strWhere = strWhere + " and isnull(BankFlag,0) in (" + BankFlags + ")";
            }
            if (string.IsNullOrEmpty(CriminalFlag) == false)
            {
                strWhere = strWhere + " and FCrimeCode in ( Select FCode from T_Criminal where isnull(FFlag,0)=" + CriminalFlag + ")";
            }
            if (string.IsNullOrEmpty(FRemark) == false)
            {
                strWhere = strWhere + " and Remark like '%" + FRemark + "%' ";
            }
            
            strWhere = strWhere + " and FCrimeCode in ( Select FCode from T_Criminal where FAreaCode in ( select fareaCode from t_czy_area where fflag=2 and fcode='" + LoginCode + "'))";
            return strWhere;
        }

        //打印罪犯汇总总表
        public ActionResult PrintCriminalSumOrder(int id=1)
        {            
            string strWhere = SetRequestSearchWhere(Session["loginUserCode"].ToString());

            StringBuilder strSql;
            string title;
            string result;
            SetSumOrderWhereSql(0,id, strWhere, out strSql, out title, out result);

            if (result != "")//Err|对不起,您传入错误的参数了
            {
                return Content(result);
            }

            ViewData["id"] = id;
            ViewData["title"] = title;
            List<T_Vcrd> vcrds = new T_VcrdBLL().CustomerQuery(strSql.ToString());

            string startTime = Request["startTime"];
            string endTime = Request["endTime"];

            

            //上期结存金额
            
            T_Vcrd shangqiJinE =new T_Vcrd();
            if (string.IsNullOrEmpty(startTime)==false)
            {
                shangqiJinE = new T_VcrdBLL().CustomerQuery("Select '上期结存' DType,sum(DAmount-CAmount) DAmount from t_vcrd where flag=0 and crtdate<'"+ startTime +"'")[0];
            }
            else
            {
                shangqiJinE.DType = "上期结存";
                shangqiJinE.DAmount = 0;
            }

            
            ViewData["vcrds"] = vcrds;
            ViewData["shangqiJinE"] = shangqiJinE;

            ViewData["startTime"]=startTime;
            ViewData["endTime"] = endTime;

            return View();
        }

        //Excel导出罪犯汇总总表
        public ActionResult ExcelCriminalSumOrder(int id = 1)
        {
            string strLoginName = new T_CZYBLL().GetModel(Session["loginUserCode"].ToString()).FName;

            string strWhere = SetRequestSearchWhere(Session["loginUserCode"].ToString());
            StringBuilder strSql;
            string title;
            string result;
            SetSumOrderWhereSql(1,id, strWhere, out strSql, out title, out result);

            if (result != "")//Err|对不起,您传入错误的参数了
            {
                return Content(result);
            }
            //ViewData["id"] = id;
            //ViewData["title"] = title;
            //List<T_Vcrd> vcrds = new T_VcrdBLL().CustomerQuery(strSql.ToString());
            //ViewData["vcrds"] = vcrds;

            DataTable dt = new CommTableInfoBLL().GetDataTable(strSql.ToString());
            string strFileName = new CommonClass().GB2312ToUTF8(strLoginName + "_SumOrder.xls");
            strFileName = Server.MapPath("~/Upload/" + strFileName); ;
            //ExcelRender.RenderToExcel(dt, context, strFileName);
            ExcelRender.RenderToExcel(dt,title ,strFileName);
            return Content("OK|" + strLoginName + "_SumOrder.xls");


            //return View();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <param name="intFlag">查询SQL类型，0是报表，1是Excel 把字段转成中文件名</param>
        /// <param name="id"></param>
        /// <param name="strWhere"></param>
        /// <param name="strSql"></param>
        /// <param name="title"></param>
        /// <param name="result"></param>
        private static void SetSumOrderWhereSql(int intFlag,int id, string strWhere, out StringBuilder strSql, out string title, out string result)
        {

            strSql = new StringBuilder();
            title = "";
            result = "";
            switch (id)
            {
                case 1://按个罪犯个人汇总表
                    {
                        if(intFlag==0)
                        {
                            strSql.Append("select FCrimeCode,FCriminal,FAreaName,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");

                        }else
                        {
                            strSql.Append("select FCrimeCode 编号,FCriminal 姓名,FAreaName 队别,Sum(Damount) 收入,Sum(Camount) 支出 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" group by FCrimeCode,FCriminal,FAreaName ");
                        strSql.Append(" Order by FAreaName,FCriminal,FCrimeCode ;");
                        title = "罪犯个人汇总报表";
                    } break;
                case 2://按个罪犯个人清表
                    {
                        if(intFlag==0)
                        {
                            strSql.Append("select Top 5000 Vouno,FCrimeCode,FCriminal,Dtype,DAmount,CAmount,FAreaName,FAreaCode,CrtDate,BankFlag from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select Top 8000 Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 日期,BankFlag 银行标志 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" Order by FCrimeCode,FCriminal,CrtDate ;");
                        title = "罪犯个人记录清单";
                    } break;
                case 3://按队别汇总总表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select FAreaName,DType,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select FAreaName 队别,DType 类型,Sum(Damount) 收入,Sum(Camount) 支出 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" group by FAreaName,DType ");
                        strSql.Append(" Order by FAreaName,DType ;");
                        title = "罪犯个人记录清单";
                    } break;
                case 4://按队别分类清表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select Top 5000 Vouno,FCrimeCode,FCriminal,Dtype,DAmount,CAmount,FAreaName,FAreaCode,CrtDate,BankFlag,Remark from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select Top 8000 Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 日期,BankFlag 银行标志,Remark 备注 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" Order by FAreaCode,FAreaName,FCriminal,CrtDate ;");
                        title = "罪犯个人记录清单";
                    } break;
                case 5://按存取类型汇总总表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select TypeFlag,DType,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select TypeFlag 类型ID,DType 类型,Sum(Damount) 收入,Sum(Camount) 支出 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" group by TypeFlag,DType ");
                        strSql.Append(" Order by TypeFlag,DType ;");
                        title = "存取类型汇总报表";
                    } break;
                case 6://按存取类型分类清表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select Top 5000 Vouno,FCrimeCode,FCriminal,Dtype,DAmount,CAmount,FAreaName,FAreaCode,CrtDate,BankFlag,Remark from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select Top 8000 Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 日期,BankFlag 银行标志,Remark 备注 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" Order by TypeFlag,DType,FAreaCode,FCriminal ;");
                        title = "存取类型分类清单报表";
                    } break;
                case 7://超市消费汇总表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select a.FAreaCode,a.FAreaName,a.Dtype,a.Damount+isnull( b.Damount,0) Damount,a.Camount+isnull( b.Camount,0) Camount from (");
                        }
                        else
                        {
                            strSql.Append("select a.FAreaCode 队别号,a.FAreaName 队别,a.Dtype 类型,a.Damount+isnull( b.Damount,0) 退货金额,a.Camount+isnull( b.Camount,0) 消费金额 from (");
                        }
                        strSql.Append("");
                        strSql.Append("select FAreaCode,FAreaName,Dtype,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");
                        strSql.Append(" Where " + strWhere + " and TypeFlag=7 ");
                        strSql.Append(" group by FAreaCode,FAreaName,Dtype ");
                        strSql.Append(" ) a Left Outer join (");
                        strSql.Append("");
                        strSql.Append("select FAreaCode,FAreaName,Dtype,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");
                        strSql.Append(" Where " + strWhere + " and TypeFlag=11 ");
                        strSql.Append(" group by FAreaCode,FAreaName,Dtype ");
                        strSql.Append(" ) b On a.FAreaCode=b.FAreaCode ");
                        strSql.Append(" order by a.FAreaCode,a.FAreaName,a.Dtype");
                        title = "超市消费汇总报表";
                    } break;
                case 8://明细记录清单
                    {
                        //Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 日期,BankFlag 银行标志
                        if (intFlag == 0)
                        {
                            strSql.Append("select Top 5000 Vouno,FCrimeCode,FCriminal,Dtype,DAmount,CAmount,FAreaName,FAreaCode,CrtDate,BankFlag,Remark from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select Top 8000 Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 日期,BankFlag 银行标志,Remark 备注 from T_VCrd  ");
                        }
                        strSql.Append(" Where " + strWhere);
                        strSql.Append(" Order by CrtDate,Vouno;");
                        title = "明细记录清单";
                    } break;
                case 9://按消费日期银行交易汇总报表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select case Bankflag  when 2 then '成功' when 3 then '手动成功' when 4 then '手动成功' else  '失败' end Depositer,TypeFlag,DType,Damount,Camount,Remark from ( ");
                        }
                        else
                        {
                            strSql.Append("select case Bankflag  when 2 then '成功' when 3 then '手动成功' when 4 then '手动成功' else  '失败' end 状态,TypeFlag 类型ID,DType 类型,Damount 收入,Camount 支出,Remark 回款月份 from ( ");
                        }
                        strSql.Append("select Bankflag ,substring( Convert(varchar(20),SendDate,102),1,7) Remark,TypeFlag,DType,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");

                        //strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere +" and TypeFlag not in(5,6,14)");
                        strSql.Append(" group by Bankflag,substring( Convert(varchar(20),SendDate,102),1,7) ,TypeFlag,DType ");
                        strSql.Append(" ) x ");
                        strSql.Append(" Order by TypeFlag,DType ;");
                        title = "按消费日期银行交易汇总报表";
                    }break;
                case 10://银行交易明细清单
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select Top 8000 Vouno,FCrimeCode,FCriminal,Dtype,DAmount,CAmount,FAreaName,FAreaCode,CrtDate,SendDate,case Bankflag  when 2 then '成功' when 3 then '手动成功' when 4 then '手动成功' else  '失败' end Depositer  from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select Top 8000 Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 下单日期,SendDate 回款日期,BankFlag 银行标志 from T_VCrd  ");
                        }
                        //strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere + " and TypeFlag not in(5,6,14) ");
                        strSql.Append(" Order by BankFlag,TypeFlag,DType,FAreaCode,FCriminal ;");
                        title = "按消费日期银行交易明细清单";
                    } break;
                case 11://银行每日交易报表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select convert(datetime, convert(varchar(20), CrtDate,102)) CrtDate,SendDate,TypeFlag,DType,BankFlag,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select convert(datetime, convert(varchar(20), CrtDate,102)) 消费日期,SendDate 交易日期,TypeFlag 类型ID,DType 类型,BankFlag 回款标志,Sum(Damount) 收入,Sum(Camount) 支出 from T_VCrd  ");
                        }
                        //strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere + " and TypeFlag not in(5,6,14) ");
                        strSql.Append(" group by convert(datetime, convert(varchar(20), CrtDate,102)),SendDate,TypeFlag,DType,BankFlag ");
                        strSql.Append(" Order by convert(datetime, convert(varchar(20), CrtDate,102)),SendDate,TypeFlag,DType,BankFlag ;");
                        title = "按消费日期银行日交易分类报表";
                    } break;
                case 12:
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append(@"select * from (
                                select a.fcrimecode,c.fname fcriminal,b.BankAccNo CardCode,a.Crtby CrtBy,0 Flag
                                ,a.CrtDate CrtDate,0 DAmount,(a.AmountA+a.AmountB+a.AmountC) CAmount,d.FName FAreaName,'离监取款' DType
                                from t_balanceList a inner join t_Criminal_Card b on a.fcrimecode=b.fcrimecode 
                                inner join t_criminal c on a.fcrimecode=c.fcode
                                inner join t_area d on c.FAreaCode=d.FCode
                                ) e  ");
                        }
                        else
                        {
                            strSql.Append(@"select fcrimecode 编号,fcriminal 姓名,CardCode 银行卡
                                ,FAreaName 队别,CAmount 余额,CrtDate 日期,DType 类型,CrtBy 操作员 from (
                                select a.fcrimecode,c.fname fcriminal,b.BankAccNo CardCode,a.Crtby CrtBy,0 Flag
                                ,a.CrtDate CrtDate,0 DAmount,(a.AmountA+a.AmountB+a.AmountC) CAmount,d.FName FAreaName,'离监取款' DType
                                from t_balanceList a inner join t_Criminal_Card b on a.fcrimecode=b.fcrimecode 
                                inner join t_criminal c on a.fcrimecode=c.fcode
                                inner join t_area d on c.FAreaCode=d.FCode
                                ) e");
                        }
                        //strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere + " ");
                        //strSql.Append(" group by convert(datetime, convert(varchar(20), CrtDate,102)),TypeFlag,DType ");
                        strSql.Append(" Order by convert(datetime, convert(varchar(20), CrtDate,102)),FAreaName,fcriminal ;");
                        title = DateTime.Now.Month.ToString()+"月份监狱零冻结出狱犯人卡清单";
                    }break;
                case 13://按回款日期银行交易汇总报表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select case Bankflag  when 2 then '成功' when 3 then '手动成功' when 4 then '手动成功' else  '失败' end Depositer,TypeFlag,DType,Damount,Camount,Remark from ( ");
                        }
                        else
                        {
                            strSql.Append("select case Bankflag  when 2 then '成功' when 3 then '手动成功' when 4 then '手动成功' else  '失败' end 状态,TypeFlag 类型ID,DType 类型,Damount 收入,Camount 支出,Remark 消费月份 from ( ");
                        }
                        strSql.Append("select Bankflag ,substring( Convert(varchar(20),CrtDate,102),1,7) Remark,TypeFlag,DType,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");

                        strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere + " and BankFlag=2 and TypeFlag not in(5,6,14)");
                        strSql.Append(" group by Bankflag,substring( Convert(varchar(20),CrtDate,102),1,7) ,TypeFlag,DType ");
                        strSql.Append(" ) x ");
                        strSql.Append(" Order by TypeFlag,DType ;");
                        title = "按回款日期银行交易汇总报表";
                    } break;
                case 14://按回款日期银行交易明细清单
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select Top 8000 Vouno,FCrimeCode,FCriminal,Dtype,DAmount,CAmount,FAreaName,FAreaCode,CrtDate,SendDate,case Bankflag  when 2 then '成功' when 3 then '手动成功' when 4 then '手动成功' else  '失败' end Depositer  from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select Top 8000 Vouno 流水号,FCrimeCode 编号,FCriminal 姓名,Dtype 类型,DAmount 收入,CAmount 支出,FAreaName 队别,FAreaCode 队别号,CrtDate 下单日期,SendDate 回款日期,BankFlag 银行标志 from T_VCrd  ");
                        }
                        strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere + " and BankFlag=2 and TypeFlag not in(5,6,14) ");
                        strSql.Append(" Order by BankFlag,TypeFlag,DType,FAreaCode,FCriminal ;");
                        title = "按回款日期银行交易明细清单";
                    } break;
                case 15://按回款日期银行每日交易报表
                    {
                        if (intFlag == 0)
                        {
                            strSql.Append("select convert(datetime, convert(varchar(20), CrtDate,102)) crtdate,convert(datetime, convert(varchar(20), SendDate,102)) SendDate,TypeFlag,DType,BankFlag,Sum(Damount) Damount,Sum(Camount) Camount from T_VCrd  ");
                        }
                        else
                        {
                            strSql.Append("select convert(datetime, convert(varchar(20), CrtDate,102)) 消费月份,convert(datetime, convert(varchar(20), SendDate,102)) 交易日期,TypeFlag 类型ID,DType 类型,BankFlag 回款标志,Sum(Damount) 收入,Sum(Camount) 支出 from T_VCrd  ");
                        }
                        strWhere = strWhere.Replace("CrtDate", "SendDate");
                        strSql.Append(" Where " + strWhere + " and TypeFlag not in(5,6,14) ");
                        strSql.Append(" group by convert(datetime, convert(varchar(20), CrtDate,102)),convert(datetime, convert(varchar(20), SendDate,102)),TypeFlag,DType,BankFlag ");
                        strSql.Append(" Order by convert(datetime, convert(varchar(20), CrtDate,102)),convert(datetime, convert(varchar(20), SendDate,102)),TypeFlag,DType,BankFlag ;");
                        title = "按回款日期银行日交易分类报表";
                    } break;
                default:
                    {
                        result = "Err|对不起,您传入错误的参数了";
                        //return Content("Err|对不起,您传入错误的参数了");
                    }
                    break;

            }
        }


	}
}